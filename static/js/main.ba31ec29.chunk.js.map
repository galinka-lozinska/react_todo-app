{"version":3,"sources":["api/constant.js","api/api.js","components/NewTodo/NewTodo.js","components/NewTodo/NewTodoTypes.js","components/Filter/Filter.js","components/Footer/Footer.js","components/Todo/TodoTypes.js","components/Todo/Todo.js","components/TodoList/TodoList.js","api/helper.js","App.js","index.js"],"names":["FILTERS","USER","id","name","username","phone","email","USER_URL","TODOS_URL","removeTodo","todoId","key","value","fetch","method","headers","body","JSON","stringify","deleteTodo","NewTodo","PropTypes","func","isRequired","onNewTodoAdd","onErrorSet","useState","inputValue","setInputValue","handleNewTodoAdd","todo","title","completed","userId","then","response","json","todoServer","data","newTodo","prevTodo","catch","error","toString","type","className","placeholder","onChange","event","target","onKeyPress","preventDefault","onBlur","Filter","onFilterSet","to","exact","activeClassName","onClick","Footer","number","string","bool","todos","onTodosSet","hasCompletedTodos","setHasCompletedTodos","count","setCount","useEffect","find","reduce","acc","style","display","forEach","filter","Todo","editingTodoId","setIsEditingTodoId","setTitle","myRef","useRef","current","focus","editSelectedTodo","prevTodos","map","item","classNames","editing","checked","persist","onDoubleClick","ref","onKeyDown","TodoList","typeFilteringTodos","some","htmlFor","hidden","length","filters","getFilteringTodos","App","setTodos","user","setUser","setError","setFilter","location","useLocation","getTodos","todosServer","getUser","userServer","hash","localStorage","setItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba31ec29.chunk.js","sourcesContent":["export const FILTERS = {\n  all: 'all',\n  active: 'active',\n  completed: 'completed',\n};\n\nexport const USER = {\n  id: 440,\n  name: 'Galina Lozinska',\n  username: 'lozinska',\n  phone: '0967784857',\n  email: 'galinkalozinska@gmail.com',\n};\n","import { USER } from './constant';\n\nconst USER_URL = 'https://mate-api.herokuapp.com/users';\nconst TODOS_URL = 'https://mate-api.herokuapp.com/todos';\n\nexport const createUser = () => fetch(\n  USER_URL,\n  {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json; charset=UTF-8' },\n    body: JSON.stringify(USER),\n  },\n)\n  .then(response => response.json())\n  .then(user => user.data);\n\nexport const getUser = (userId = USER.id) => fetch(`${USER_URL}/${userId}`)\n  .then(response => response.json())\n  .then(user => user.data);\n\nexport const getTodos\n  = (userId = USER.id) => fetch(`${TODOS_URL}/?userId=${userId}`)\n    .then(response => response.json())\n    .then(todos => todos.data);\n\nexport const createTodo = todo => fetch(\n  TODOS_URL,\n  {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json; charset=UTF-8' },\n    body: JSON.stringify({\n      ...todo,\n      userId: USER.id,\n    }),\n  },\n)\n  .then(response => response.json())\n  .then(todoServer => todoServer.data);\n\nexport const removeTodo = (todoId, key, value) => fetch(\n  `${TODOS_URL}/${todoId}`,\n  {\n    method: 'PATCH',\n    headers: { 'Content-Type': 'application/json; charset=UTF-8' },\n    body: JSON.stringify({\n      [key]: value,\n    }),\n  },\n);\n\nexport const deleteTodo = todoId => fetch(\n  `${TODOS_URL}/${todoId}`,\n  {\n    method: 'DELETE',\n  },\n);\n","import React, { useState } from 'react';\nimport { createTodo } from '../../api/api';\n\nimport { NewTodoTypes } from './NewTodoTypes';\n\nexport const NewTodo = ({\n  onNewTodoAdd,\n  onErrorSet,\n}) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleKeyPress = (event) => {\n    const { key } = event;\n\n    if (key === 'Enter') {\n      event.preventDefault();\n      handleNewTodoAdd(inputValue);\n    }\n  };\n\n  const handleNewTodoAdd = (value) => {\n    if (value) {\n      createTodo({\n        title: value,\n        completed: false,\n      })\n        .then((newTodo) => {\n          onNewTodoAdd(prevTodo => [\n            ...prevTodo,\n            newTodo,\n          ]);\n        })\n        .catch(error => onErrorSet(error.toString()));\n      setInputValue('');\n    }\n  };\n\n  return (\n    <form>\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        value={inputValue}\n        placeholder=\"What needs to be done?\"\n        onChange={event => setInputValue(event.target.value)}\n        onKeyPress={handleKeyPress}\n        onBlur={event => handleNewTodoAdd(event.target.value)}\n      />\n    </form>\n  );\n};\n\nNewTodo.propTypes = NewTodoTypes;\n","import PropTypes from 'prop-types';\n\nexport const NewTodoTypes = {\n  onNewTodoAdd: PropTypes.func.isRequired,\n  onErrorSet: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { FILTERS } from '../../api/constant';\n\nexport const Filter = ({ onFilterSet }) => (\n  <ul className=\"filters\">\n    <li>\n      <NavLink\n        to=\"/\"\n        exact\n        activeClassName=\"selected\"\n        onClick={() => onFilterSet(FILTERS.all)}\n      >\n        All\n      </NavLink>\n    </li>\n\n    <li>\n      <NavLink\n        to=\"/active\"\n        exact\n        activeClassName=\"selected\"\n        onClick={() => onFilterSet(FILTERS.active)}\n      >\n        Active\n      </NavLink>\n    </li>\n\n    <li>\n      <NavLink\n        to=\"/completed\"\n        exact\n        activeClassName=\"selected\"\n        onClick={() => onFilterSet(FILTERS.completed)}\n      >\n        Completed\n      </NavLink>\n    </li>\n  </ul>\n);\n\nFilter.propTypes = {\n  onFilterSet: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Filter } from '../Filter';\nimport { TodoTypes } from '../Todo/TodoTypes';\nimport { deleteTodo } from '../../api/api';\n\nexport const Footer = ({\n  todos,\n  onTodosSet,\n  onFilterSet,\n}) => {\n  const [hasCompletedTodos, setHasCompletedTodos] = useState(false);\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    setHasCompletedTodos(!todos.find(todo => todo.completed === true));\n    setCount(() => todos.reduce(\n      (acc, todo) => acc + (!todo.completed ? 1 : 0),\n      0,\n    ));\n  }, [todos]);\n\n  const handleTodosCompletedClear = () => {\n    todos.forEach(todo => todo.completed && (deleteTodo(todo.id)));\n    onTodosSet(() => todos.filter(todo => !todo.completed));\n  };\n\n  return (\n    <>\n      <span className=\"todo-count\">\n        {`${count} item${count > 1 ? 's' : ''} left`}\n      </span>\n\n      <Filter\n        onFilterSet={onFilterSet}\n      />\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        style={{ display: hasCompletedTodos ? 'none' : 'block' }}\n        onClick={handleTodosCompletedClear}\n      >\n        Clear completed\n      </button>\n    </>\n  );\n};\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape(TodoTypes),\n  ).isRequired,\n  onTodosSet: PropTypes.func.isRequired,\n  onFilterSet: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const TodoTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  completed: PropTypes.bool,\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classname';\n\nimport { TodoTypes } from './TodoTypes';\nimport { removeTodo, deleteTodo } from '../../api/api';\n\nexport const Todo = ({ todo, onTodosSet }) => {\n  const [editingTodoId, setIsEditingTodoId] = useState(0);\n  const [title, setTitle] = useState(todo.title);\n\n  const myRef = useRef();\n\n  useEffect(() => {\n    myRef.current.focus();\n  }, [editingTodoId]);\n\n  const handleTodoCompleted = (event) => {\n    const { checked } = event.target;\n\n    event.persist();\n    removeTodo(todo.id, 'completed', checked);\n    onTodosSet(prevTodos => prevTodos.map(\n      item => (item.id === todo.id\n        ? ({\n          ...item,\n          completed: checked,\n        })\n        : item),\n    ));\n  };\n\n  const handleTodoDelete = (todoId) => {\n    deleteTodo(todoId);\n    onTodosSet(prevTodos => prevTodos.filter(\n      item => item.id !== todoId,\n    ));\n  };\n\n  const handleTodoEdit = (event) => {\n    const { key } = event;\n\n    if (key === 'Enter') {\n      event.persist();\n      editSelectedTodo();\n    }\n\n    if (key === 'Escape') {\n      setIsEditingTodoId(0);\n    }\n  };\n\n  const editSelectedTodo = () => {\n    if (title) {\n      removeTodo(todo.id, 'title', title);\n      onTodosSet(prevTodos => prevTodos.map(\n        item => (item.id === todo.id ? {\n          ...item,\n          title,\n        } : item),\n      ));\n    }\n\n    setIsEditingTodoId(0);\n  };\n\n  return (\n    <li\n      className={classNames({\n        completed: todo.completed,\n        editing: (editingTodoId === todo.id),\n      })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={todo.completed}\n          onChange={handleTodoCompleted}\n        />\n        <label\n          onDoubleClick={() => setIsEditingTodoId(todo.id)}\n        >\n          {todo.title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => handleTodoDelete(todo.id)}\n        />\n      </div>\n      <input\n        type=\"text\"\n        ref={myRef}\n        className=\"edit\"\n        value={title}\n        onChange={event => setTitle(event.target.value)}\n        onKeyDown={handleTodoEdit}\n        onBlur={editSelectedTodo}\n      />\n    </li>\n  );\n};\n\nTodo.propTypes = {\n  todo: PropTypes.shape(TodoTypes).isRequired,\n  onTodosSet: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TodoTypes } from '../Todo/TodoTypes';\nimport { Todo } from '../Todo';\nimport { removeTodo } from '../../api/api';\n\nimport { getFilteringTodos } from '../../api/helper';\n\nexport const TodoList = ({ todos, typeFilteringTodos, onTodosSet }) => {\n  const handleChange = (event) => {\n    const { checked } = event.target;\n\n    event.persist();\n    todos.forEach(todo => removeTodo(todo.id, 'completed', !todo.completed));\n    onTodosSet(() => todos.map(todo => ({\n      ...todo,\n      completed: checked,\n    })));\n  };\n\n  return (\n    <>\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        checked={!todos.some(todo => !todo.completed)}\n        className=\"toggle-all\"\n        onChange={handleChange}\n      />\n      <label\n        htmlFor=\"toggle-all\"\n        hidden={todos.length === 0}\n      >\n        Mark all as complete\n      </label>\n\n      <ul className=\"todo-list\">\n        {getFilteringTodos(typeFilteringTodos, todos).map(todo => (\n          <Todo\n            key={todo.id}\n            todo={todo}\n            onTodosSet={onTodosSet}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape(TodoTypes),\n  ).isRequired,\n  typeFilteringTodos: PropTypes.string.isRequired,\n  onTodosSet: PropTypes.func.isRequired,\n};\n","import { FILTERS } from './constant';\n\nexport const getFilteringTodos = (filters, todos) => {\n  switch (filters) {\n    case FILTERS.all:\n      return todos;\n    case FILTERS.active:\n      return todos.filter(todo => todo.completed === false);\n    case FILTERS.completed:\n      return todos.filter(todo => todo.completed === true);\n    default:\n      return todos;\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { HashRouter, useLocation } from 'react-router-dom';\nimport { NewTodo } from './components/NewTodo';\nimport { Footer } from './components/Footer';\nimport { TodoList } from './components/TodoList';\n\nimport { getTodos, getUser } from './api/api';\nimport { FILTERS } from './api/constant';\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [user, setUser] = useState({});\n  const [error, setError] = useState('');\n  const [filter, setFilter] = useState(FILTERS.all);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    // setTodos(JSON.parse(localStorage.getItem('todos')) || []);\n    getTodos()\n      .then(todosServer => setTodos(todosServer || []));\n    getUser()\n      .then(userServer => setUser(userServer));\n  }, []);\n\n  useEffect(() => {\n    switch (location.hash) {\n      case '#/':\n        setFilter(FILTERS.all);\n        break;\n      case '#/active':\n        setFilter(FILTERS.active);\n        break;\n      case '#/completed':\n        setFilter(FILTERS.completed);\n        break;\n      default:\n        break;\n    }\n  }, [location]);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <HashRouter>\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <NewTodo\n            onNewTodoAdd={setTodos}\n            onErrorSet={setError}\n          />\n        </header>\n\n        <section className=\"main\">\n          <TodoList\n            todos={todos}\n            typeFilteringTodos={filter}\n            onTodosSet={setTodos}\n          />\n        </section>\n\n        <footer\n          className=\"footer\"\n          style={{ display: !todos.length ? 'none' : 'block' }}\n        >\n          <Footer\n            todos={todos}\n            onTodosSet={setTodos}\n            onFilterSet={setFilter}\n          />\n        </footer>\n      </section>\n\n      <section className=\"info\">\n        <section className=\"error\">\n          <p>{error}</p>\n        </section>\n        <p>{user.name}</p>\n      </section>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}