{"version":3,"sources":["api/constant.js","api/api.js","components/AddTodo/AddTodo.js","components/AddTodo/AddTodoTypes.js","components/TodosFilter/TodosFilter.js","components/Footer/Footer.js","components/TodoItem/TodoTypes.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","api/helper.js","App.js","index.js"],"names":["FILTERS","USER","id","name","username","phone","email","USER_URL","TODOS_URL","removeTodo","todoId","key","value","fetch","method","headers","body","JSON","stringify","deleteTodo","AddTodo","PropTypes","func","onAddTodo","setError","useState","inputValue","setInputValue","handleAddTodo","todo","title","completed","userId","then","response","json","todoServer","data","newTodo","prevTodo","catch","error","toString","type","className","placeholder","onChange","event","target","onKeyPress","preventDefault","onBlur","TodosFilter","setFilter","to","exact","activeClassName","onClick","Footer","number","string","bool","todos","setTodos","hasCompletedTodos","setHasCompletedTodos","count","setCount","useEffect","find","reduce","acc","style","display","forEach","filter","TodoItem","onSetTodos","editingTodoId","setIsEditingTodoId","setTitle","myRef","useRef","current","focus","editSelectedTodo","prevTodos","map","item","classNames","editing","checked","persist","onDoubleClick","ref","onKeyDown","TodoList","htmlFor","hidden","length","getFilteringTodos","filters","App","user","setUser","location","useLocation","getTodos","todosServer","getUser","userServer","hash","localStorage","setItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.292fc0a3.chunk.js","sourcesContent":["export const FILTERS = {\n  all: 'ALL',\n  active: 'ACTIVE',\n  completed: 'COMPLETED',\n};\n\nexport const USER = {\n  id: 440,\n  name: 'Galina Lozinska',\n  username: 'lozinska',\n  phone: '0967784857',\n  email: 'galinkalozinska@gmail.com',\n};\n","import { USER } from './constant';\n\nconst USER_URL = 'https://mate-api.herokuapp.com/users';\nconst TODOS_URL = 'https://mate-api.herokuapp.com/todos';\n\nexport const createUser = () => fetch(\n  USER_URL,\n  {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json; charset=UTF-8' },\n    body: JSON.stringify(USER),\n  },\n)\n  .then(response => response.json())\n  .then(user => user.data);\n\nexport const getUser = (userId = USER.id) => fetch(`${USER_URL}/${userId}`)\n  .then(response => response.json())\n  .then(user => user.data);\n\nexport const getTodos\n  = (userId = USER.id) => fetch(`${TODOS_URL}/?userId=${userId}`)\n    .then(response => response.json())\n    .then(todos => todos.data);\n\nexport const createTodo = todo => fetch(\n  TODOS_URL,\n  {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json; charset=UTF-8' },\n    body: JSON.stringify({\n      ...todo,\n      userId: USER.id,\n    }),\n  },\n)\n  .then(response => response.json())\n  .then(todoServer => todoServer.data);\n\nexport const removeTodo = (todoId, key, value) => fetch(\n  `${TODOS_URL}/${todoId}`,\n  {\n    method: 'PATCH',\n    headers: { 'Content-Type': 'application/json; charset=UTF-8' },\n    body: JSON.stringify({\n      [key]: value,\n    }),\n  },\n);\n\nexport const deleteTodo = todoId => fetch(\n  `${TODOS_URL}/${todoId}`,\n  {\n    method: 'DELETE',\n  },\n);\n","import React, { useState } from 'react';\nimport { createTodo } from '../../api/api';\n\nimport { AddTodoTypes } from './AddTodoTypes';\n\nexport const AddTodo = ({\n  onAddTodo,\n  setError,\n}) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      handleAddTodo(inputValue);\n    }\n  };\n\n  const handleAddTodo = (value) => {\n    if (value) {\n      createTodo({\n        title: value,\n        completed: false,\n      })\n        .then((newTodo) => {\n          onAddTodo(prevTodo => [\n            ...prevTodo,\n            newTodo,\n          ]);\n        })\n        .catch(error => setError(error.toString()));\n      setInputValue('');\n    }\n  };\n\n  return (\n    <form>\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        value={inputValue}\n        placeholder=\"What needs to be done?\"\n        onChange={event => setInputValue(event.target.value)}\n        onKeyPress={handleKeyPress}\n        onBlur={event => handleAddTodo(event.target.value)}\n      />\n    </form>\n  );\n};\n\nAddTodo.propTypes = AddTodoTypes;\n","import PropTypes from 'prop-types';\n\nexport const AddTodoTypes = {\n  onAddTodo: PropTypes.func,\n  setError: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { FILTERS } from '../../api/constant';\n\nexport const TodosFilter = ({ setFilter }) => (\n  <ul className=\"filters\">\n    <li>\n      <NavLink\n        to=\"/\"\n        exact\n        activeClassName=\"selected\"\n        onClick={() => setFilter(FILTERS.all)}\n      >\n        All\n      </NavLink>\n    </li>\n\n    <li>\n      <NavLink\n        to=\"/active\"\n        exact\n        activeClassName=\"selected\"\n        onClick={() => setFilter(FILTERS.active)}\n      >\n        Active\n      </NavLink>\n    </li>\n\n    <li>\n      <NavLink\n        to=\"/completed\"\n        exact\n        activeClassName=\"selected\"\n        onClick={() => setFilter(FILTERS.completed)}\n      >\n        Completed\n      </NavLink>\n    </li>\n  </ul>\n);\n\nTodosFilter.propTypes = {\n  setFilter: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TodosFilter } from '../TodosFilter';\nimport { TodoTypes } from '../TodoItem/TodoTypes';\nimport { deleteTodo } from '../../api/api';\n\nexport const Footer = ({\n  todos,\n  setTodos,\n  setFilter,\n}) => {\n  const [hasCompletedTodos, setHasCompletedTodos] = useState(false);\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    setHasCompletedTodos(!todos.find(todo => todo.completed === true));\n    setCount(() => todos.reduce(\n      (acc, todo) => acc + (!todo.completed ? 1 : 0),\n      0,\n    ));\n  }, [todos]);\n\n  const handleClearCompleted = () => {\n    todos.forEach(todo => todo.completed && (deleteTodo(todo.id)));\n    setTodos(() => todos.filter(todo => todo.completed === false));\n  };\n\n  return (\n    <>\n      <span className=\"todo-count\">\n        {`${count} item${count > 1 ? 's' : ''} left`}\n      </span>\n\n      <TodosFilter\n        setFilter={setFilter}\n      />\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        style={{ display: hasCompletedTodos ? 'none' : 'block' }}\n        onClick={handleClearCompleted}\n      >\n        Clear completed\n      </button>\n    </>\n  );\n};\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape(TodoTypes),\n  ).isRequired,\n  setTodos: PropTypes.func.isRequired,\n  setFilter: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const TodoTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  completed: PropTypes.bool,\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classname';\n\nimport { TodoTypes } from './TodoTypes';\nimport { removeTodo, deleteTodo } from '../../api/api';\n\nexport const TodoItem = ({ todo, onSetTodos }) => {\n  const [editingTodoId, setIsEditingTodoId] = useState(0);\n  const [title, setTitle] = useState(todo.title);\n\n  const myRef = useRef();\n\n  useEffect(() => {\n    myRef.current.focus();\n  }, [editingTodoId]);\n\n  const handleCompletedTodo = (event) => {\n    event.persist();\n    removeTodo(todo.id, 'completed', event.target.checked);\n    onSetTodos(prevTodos => prevTodos.map(\n      item => (item.id === todo.id\n        ? ({\n          ...item,\n          completed: event.target.checked,\n        })\n        : item),\n    ));\n  };\n\n  const handleDeleteTodo = (todoId) => {\n    deleteTodo(todoId);\n    onSetTodos(prevTodos => prevTodos.filter(\n      item => item.id !== todoId,\n    ));\n  };\n\n  const handleEditTodo = (event) => {\n    if (event.key === 'Enter') {\n      event.persist();\n      editSelectedTodo();\n    }\n\n    if (event.key === 'Escape') {\n      setIsEditingTodoId(0);\n    }\n  };\n\n  const editSelectedTodo = () => {\n    if (title) {\n      removeTodo(todo.id, 'title', title);\n      onSetTodos(prevTodos => prevTodos.map(\n        item => (item.id === todo.id ? {\n          ...item,\n          title,\n        } : item),\n      ));\n    }\n\n    setIsEditingTodoId(0);\n  };\n\n  return (\n    <li\n      className={classNames({\n        completed: todo.completed,\n        editing: (editingTodoId === todo.id),\n      })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={todo.completed}\n          onChange={handleCompletedTodo}\n        />\n        <label\n          onDoubleClick={() => setIsEditingTodoId(todo.id)}\n        >\n          {todo.title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={handleDeleteTodo}\n        />\n      </div>\n      <input\n        type=\"text\"\n        ref={myRef}\n        className=\"edit\"\n        value={title}\n        onChange={event => setTitle(event.target.value)}\n        onKeyDown={handleEditTodo}\n        onBlur={editSelectedTodo}\n      />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape(TodoTypes).isRequired,\n  onSetTodos: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TodoTypes } from '../TodoItem/TodoTypes';\nimport { TodoItem } from '../TodoItem';\nimport { removeTodo } from '../../api/api';\n\nexport const TodoList = ({ todos, onSetTodos }) => {\n  const handleChange = (event) => {\n    event.persist();\n    todos.forEach(todo => removeTodo(todo.id, 'completed', !todo.completed));\n    onSetTodos(() => todos.map(todo => ({\n      ...todo,\n      completed: event.target.checked,\n    })));\n  };\n\n  return (\n    <>\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        onChange={handleChange}\n      />\n      <label\n        htmlFor=\"toggle-all\"\n        hidden={todos.length === 0}\n      >\n        Mark all as complete\n      </label>\n\n      <ul className=\"todo-list\">\n        {todos.map(todo => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            onSetTodos={onSetTodos}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape(TodoTypes),\n  ).isRequired,\n  onSetTodos: PropTypes.func.isRequired,\n};\n","import { FILTERS } from './constant';\n\nexport const getFilteringTodos = (filters, todos) => {\n  switch (filters) {\n    case FILTERS.all:\n      return todos;\n    case FILTERS.active:\n      return todos.filter(todo => todo.completed === false);\n    case FILTERS.completed:\n      return todos.filter(todo => todo.completed === true);\n    default:\n      return todos;\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { HashRouter, useLocation } from 'react-router-dom';\nimport { AddTodo } from './components/AddTodo';\nimport { Footer } from './components/Footer';\nimport { TodoList } from './components/TodoList';\n\nimport { getTodos, getUser } from './api/api';\nimport { FILTERS } from './api/constant';\nimport { getFilteringTodos } from './api/helper';\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [user, setUser] = useState({});\n  const [error, setError] = useState('');\n  const [filter, setFilter] = useState(FILTERS.all);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    // setTodos(JSON.parse(localStorage.getItem('todos')) || []);\n    getTodos()\n      .then(todosServer => setTodos(todosServer || []));\n    getUser()\n      .then(userServer => setUser(userServer));\n  }, []);\n\n  useEffect(() => {\n    switch (location.hash) {\n      case '#/':\n        setFilter(FILTERS.all);\n        break;\n      case '#/active':\n        setFilter(FILTERS.active);\n        break;\n      case '#/completed':\n        setFilter(FILTERS.completed);\n        break;\n      default:\n        break;\n    }\n  }, [location]);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <HashRouter>\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <AddTodo\n            onAddTodo={setTodos}\n            setError={setError}\n          />\n        </header>\n\n        <section className=\"main\">\n          <TodoList\n            todos={getFilteringTodos(filter, todos)}\n            onSetTodos={setTodos}\n          />\n        </section>\n\n        <footer\n          className=\"footer\"\n          style={{ display: !todos.length ? 'none' : 'block' }}\n        >\n          <Footer\n            todos={todos}\n            setTodos={setTodos}\n            setFilter={setFilter}\n          />\n        </footer>\n      </section>\n\n      <section className=\"info\">\n        <section className=\"error\">\n          <p>{error}</p>\n        </section>\n        <p>{user.name}</p>\n      </section>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}